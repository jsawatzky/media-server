// Code generated by openapi generator; DO NOT EDIT.
/*
 * Torrent Console
 *
 * Specification for the torrent server console to provide an interface to tools
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{service: s}
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{
		{
			"DownloadNotifyPost",
			strings.ToUpper("Post"),
			"/api/download/notify",
			c.DownloadNotifyPost,
		},
	}
}

// DownloadNotifyPost - Notify server of a completed download
func (c *DefaultApiController) DownloadNotifyPost(w http.ResponseWriter, r *http.Request) {
	query := r.URL.Query()
	mediaType := query.Get("mediaType")
	result, err := c.service.DownloadNotifyPost(r.Context(), mediaType)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
